fails:Kernel.Integer raises a TypeError when passed nil
fails:Kernel.Integer accepts wholly lowercase alphabetic strings for bases > 10
fails:Kernel.Integer accepts wholly uppercase alphabetic strings for bases > 10
fails:Kernel.Integer accepts mixed-case alphabetic strings for bases > 10
fails:Kernel.Integer accepts alphanumeric strings for bases > 10
fails:Kernel#Integer raises a TypeError when passed nil
fails:Kernel#Integer accepts wholly lowercase alphabetic strings for bases > 10
fails:Kernel#Integer accepts wholly uppercase alphabetic strings for bases > 10
fails:Kernel#Integer accepts mixed-case alphabetic strings for bases > 10
fails:Kernel#Integer accepts alphanumeric strings for bases > 10
fails:Kernel.Integer ignores leading whitespace
fails:Kernel.Integer ignores trailing whitespace
fails:Kernel.Integer ignores an embedded _
fails:Kernel.Integer ignores a single leading +
fails:Kernel.Integer makes the number negative if there's a leading -
fails:Kernel.Integer parses the value as a hex number if there's a leading 0x and a base of 16
fails:Kernel.Integer is a positive hex number if there's a leading +0x and base of 16
fails:Kernel.Integer is a negative hex number if there's a leading -0x and a base of 16
fails:Kernel.Integer parses the value as a hex number if there's a leading 0X and a base of 16
fails:Kernel.Integer is a positive hex number if there's a leading +0X and base of 16
fails:Kernel.Integer is a negative hex number if there's a leading -0X and a base of 16
fails:Kernel.Integer parses the value as a binary number if there's a leading 0b and the base is 2
fails:Kernel.Integer is a positive binary number if there's a leading +0b and a base of 2
fails:Kernel.Integer is a negative binary number if there's a leading -0b and a base of 2
fails:Kernel.Integer parses the value as a binary number if there's a leading 0B and the base is 2
fails:Kernel.Integer is a positive binary number if there's a leading +0B and a base of 2
fails:Kernel.Integer is a negative binary number if there's a leading -0B and a base of 2
fails:Kernel.Integer parses the value as an octal number if there's a leading 0o and a base of 8
fails:Kernel.Integer is a positive octal number if there's a leading +0o and a base of 8
fails:Kernel.Integer is a negative octal number if there's a leading -0o and a base of 8
fails:Kernel.Integer parses the value as an octal number if there's a leading 0O and a base of 8
fails:Kernel.Integer is a positive octal number if there's a leading +0O and a base of 8
fails:Kernel.Integer is a negative octal number if there's a leading -0O and a base of 8
fails:Kernel.Integer parses the value as a decimal number if there's a leading 0D and a base of 10
fails:Kernel.Integer is a positive decimal number if there's a leading +0D and a base of 10
fails:Kernel.Integer is a negative decimal number if there's a leading -0D and a base of 10
fails:Kernel.Integer parses the value as a decimal number if there's a leading 0d and a base of 10
fails:Kernel.Integer is a positive decimal number if there's a leading +0d and a base of 10
fails:Kernel.Integer is a negative decimal number if there's a leading -0d and a base of 10
fails:Kernel#Integer ignores leading whitespace
fails:Kernel#Integer ignores trailing whitespace
fails:Kernel#Integer ignores an embedded _
fails:Kernel#Integer ignores a single leading +
fails:Kernel#Integer makes the number negative if there's a leading -
fails:Kernel#Integer parses the value as a hex number if there's a leading 0x and a base of 16
fails:Kernel#Integer is a positive hex number if there's a leading +0x and base of 16
fails:Kernel#Integer is a negative hex number if there's a leading -0x and a base of 16
fails:Kernel#Integer parses the value as a hex number if there's a leading 0X and a base of 16
fails:Kernel#Integer is a positive hex number if there's a leading +0X and base of 16
fails:Kernel#Integer is a negative hex number if there's a leading -0X and a base of 16
fails:Kernel#Integer parses the value as a binary number if there's a leading 0b and the base is 2
fails:Kernel#Integer is a positive binary number if there's a leading +0b and a base of 2
fails:Kernel#Integer is a negative binary number if there's a leading -0b and a base of 2
fails:Kernel#Integer parses the value as a binary number if there's a leading 0B and the base is 2
fails:Kernel#Integer is a positive binary number if there's a leading +0B and a base of 2
fails:Kernel#Integer is a negative binary number if there's a leading -0B and a base of 2
fails:Kernel#Integer parses the value as an octal number if there's a leading 0o and a base of 8
fails:Kernel#Integer is a positive octal number if there's a leading +0o and a base of 8
fails:Kernel#Integer is a negative octal number if there's a leading -0o and a base of 8
fails:Kernel#Integer parses the value as an octal number if there's a leading 0O and a base of 8
fails:Kernel#Integer is a positive octal number if there's a leading +0O and a base of 8
fails:Kernel#Integer is a negative octal number if there's a leading -0O and a base of 8
fails:Kernel#Integer parses the value as a decimal number if there's a leading 0D and a base of 10
fails:Kernel#Integer is a positive decimal number if there's a leading +0D and a base of 10
fails:Kernel#Integer is a negative decimal number if there's a leading -0D and a base of 10
fails:Kernel#Integer parses the value as a decimal number if there's a leading 0d and a base of 10
fails:Kernel#Integer is a positive decimal number if there's a leading +0d and a base of 10
fails:Kernel#Integer is a negative decimal number if there's a leading -0d and a base of 10

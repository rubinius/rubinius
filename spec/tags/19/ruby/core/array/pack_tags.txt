fails:Array#pack returns a untrusted string when the format is untrusted
fails:Array#pack returns a untrusted string when the format is untrusted even if the given format is empty
fails:Array#pack returns a untrusted string when a pack argument is untrusted
fails:Array#pack returns a string in encoding of common to the concatenated results
fails:Array#pack with format 'A' treats a multibyte character just as a byte sequence
fails:Array#pack with format 'A' returns result in ASCII-8BIT
fails:Array#pack with format 'A' cuts byte sequence even if it breaks a multibyte character
fails:Array#pack with format 'a' treats a multibyte character just as a byte sequence
fails:Array#pack with format 'a' returns result in ASCII-8BIT
fails:Array#pack with format 'a' cuts byte sequence even if it breaks a multibyte character
fails:Array#pack with format 'Z' treats a multibyte character just as a byte sequence
fails:Array#pack with format 'Z' returns result in ASCII-8BIT
fails:Array#pack with format 'Z' cuts byte sequence even if it breaks a multibyte character
fails:Array#pack with format 'B' returns an ASCII-8BIT string
fails:Array#pack with format 'b' returns an ASCII-8BIT string
fails:Array#pack with format 'H' returns an ASCII-8BIT string
fails:Array#pack with format 'h' returns an ASCII-8BIT string
fails:Array#pack with format 'C' returns an ASCII-8BIT string
fails:Array#pack with format 'c' returns an ASCII-8BIT string
fails:Array#pack with format 'n' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 'n' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 'n' returns an ASCII-8BIT string
fails:Array#pack with format 'v' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 'v' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 'v' returns an ASCII-8BIT string
fails:Array#pack with format 'N' returns an ASCII-8BIT string
fails:Array#pack with format 'V' returns an ASCII-8BIT string
fails:Array#pack with format 's' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 's' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 's' returns an ASCII-8BIT string
fails:Array#pack with format 'S' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 'S' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 'S' returns an ASCII-8BIT string
fails:Array#pack with format 'l' returns an ASCII-8BIT string
fails:Array#pack with format 'L' returns an ASCII-8BIT string
fails:Array#pack with format 'q' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'q' drops higher bytes when a pack argument is < -2**64
fails:Array#pack with format 'q' returns an ASCII-8BIT string
fails:Array#pack with format 'Q' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'Q' drops higher bytes when a pack argument is < -2**64
fails:Array#pack with format 'Q' returns an ASCII-8BIT string
fails:Array#pack with format 's!' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 's!' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 's!' returns an ASCII-8BIT string
fails:Array#pack with format 's_' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 's_' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 's_' returns an ASCII-8BIT string
fails:Array#pack with format 'S!' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 'S!' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 'S!' returns an ASCII-8BIT string
fails:Array#pack with format 'S_' does not raise a RangeError even when a pack argument is >= 2**32
fails:Array#pack with format 'S_' does not raise a RangeError even when a pack argument is <= -2**32
fails:Array#pack with format 'S_' returns an ASCII-8BIT string
fails:Array#pack with format 'i' returns an ASCII-8BIT string
fails:Array#pack with format 'i!' returns an ASCII-8BIT string
fails:Array#pack with format 'i_' returns an ASCII-8BIT string
fails:Array#pack with format 'I' returns an ASCII-8BIT string
fails:Array#pack with format 'I!' returns an ASCII-8BIT string
fails:Array#pack with format 'I_' returns an ASCII-8BIT string
fails:Array#pack with format 'l!' returns a string containing 4 bytes for an integer
fails:Array#pack with format 'l!' drops higher bytes when a pack argument is >= 2**32
fails:Array#pack with format 'l!' drops higher bytes when a pack argument is < -2**32
fails:Array#pack with format 'l!' returns an ASCII-8BIT string
fails:Array#pack with format 'l_' returns a string containing 4 bytes for an integer
fails:Array#pack with format 'l_' drops higher bytes when a pack argument is >= 2**32
fails:Array#pack with format 'l_' drops higher bytes when a pack argument is < -2**32
fails:Array#pack with format 'l_' returns an ASCII-8BIT string
fails:Array#pack with format 'L!' returns a string containing 4 bytes for an integer
fails:Array#pack with format 'L!' drops higher bytes when a pack argument is >= 2**32
fails:Array#pack with format 'L!' drops higher bytes when a pack argument is < -2**32
fails:Array#pack with format 'L!' returns an ASCII-8BIT string
fails:Array#pack with format 'L_' returns a string containing 4 bytes for an integer
fails:Array#pack with format 'L_' drops higher bytes when a pack argument is >= 2**32
fails:Array#pack with format 'L_' drops higher bytes when a pack argument is < -2**32
fails:Array#pack with format 'L_' returns an ASCII-8BIT string
fails:Array#pack with format 'f' returns a ASCII-8BIT string
fails:Array#pack with format 'd' returns a ASCII-8BIT string
fails:Array#pack with format 'e' returns a ASCII-8BIT string
fails:Array#pack with format 'E' returns a ASCII-8BIT string
fails:Array#pack with format 'g' returns a ASCII-8BIT string
fails:Array#pack with format 'G' returns a ASCII-8BIT string
fails:Array#pack with format 'm' does not append newline if line length parameter is 0
fails:Array#pack with format 'U' returns a UTF-8 string
fails:Array#pack with format 'w' returns an ASCII-8BIT string
fails:Array#pack with format 'X' returns an ASCII 8-bit String
fails:Array#pack with format 'X' doesn't care if it breaks a character
fails:Array#pack with '@' returns a String in ASCII 8-bit
fails:Array#pack with '@' doesn't care even if breaks a character
fails:String#unpack with 'w' directive produces a BER-compressed integer
fails:Array#pack with format 'n' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 'n' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 'v' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 'v' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 's' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 's' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 'S' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 'S' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 's!' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 's!' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 's_' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 's_' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 'S!' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 'S!' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 'S_' does not raise a RangeError even when a pack argument is >= 2**64
fails:Array#pack with format 'S_' does not raise a RangeError even when a pack argument is <= -2**64
fails:Array#pack with format 'l!' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'l!' drops higher bytes when a pack argument is < -2**64
fails:Array#pack with format 'l_' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'l_' drops higher bytes when a pack argument is < -2**64
fails:Array#pack with format 'L!' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'L!' drops higher bytes when a pack argument is < -2**64
fails:Array#pack with format 'L_' drops higher bytes when a pack argument is >= 2**64
fails:Array#pack with format 'L_' drops higher bytes when a pack argument is < -2**64

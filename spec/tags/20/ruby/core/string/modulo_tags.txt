fails:String#% supports binary formats using %b for negative numbers
fails:String#% supports negative integers using %d, giving priority to `-`
fails:String#% supports negative integers using %i, giving priority to `-`
fails:String#% supports octal formats using %o for negative numbers
fails:String#% supports negative bignums with %u or %d
fails:String#% supports hex formats using %x for negative numbers
fails:String#% supports hex formats using %X for negative numbers
fails:String#% formats zero without prefix using %#x
fails:String#% formats zero without prefix using %#X
fails:String#% doesn't taint the result for %x when argument is tainted
fails:String#% behaves as if calling Kernel#Float for %e arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %E arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %f arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %g arguments, when the passed argument is hexadecimal string
fails:String#% behaves as if calling Kernel#Float for %G arguments, when the passed argument is hexadecimal string

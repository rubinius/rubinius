// Generated by llvm2cpp - DO NOT MODIFY!


Module* makeLLVMModuleContents(Module *mod) {

mod->setModuleIdentifier("vm/gen/types.bc");

// Type Definitions
std::vector<const Type*>StructTy_struct_rubinius__Arguments_fields;
OpaqueType* OpaqueTy_struct_rubinius__Symbol = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::Symbol", OpaqueTy_struct_rubinius__Symbol);

PointerType* PointerTy_0 = PointerType::get(OpaqueTy_struct_rubinius__Symbol, 0);

StructTy_struct_rubinius__Arguments_fields.push_back(PointerTy_0);
std::vector<const Type*>StructTy_struct_rubinius__Object_fields;
std::vector<const Type*>StructTy_struct_rubinius__ObjectHeader_fields;
std::vector<const Type*>StructTy_union_rubinius__HeaderWord_fields;
StructTy_union_rubinius__HeaderWord_fields.push_back(IntegerType::get(mod->getContext(), 64));
StructType* StructTy_union_rubinius__HeaderWord = StructType::get(mod->getContext(), StructTy_union_rubinius__HeaderWord_fields, /*isPacked=*/false);
mod->addTypeName("union.rubinius::HeaderWord", StructTy_union_rubinius__HeaderWord);

StructTy_struct_rubinius__ObjectHeader_fields.push_back(StructTy_union_rubinius__HeaderWord);
std::vector<const Type*>StructTy_struct_rubinius__Class_fields;
std::vector<const Type*>StructTy_struct_rubinius__Module_fields;
PATypeHolder StructTy_struct_rubinius__Object_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_rubinius__Module_fields.push_back(StructTy_struct_rubinius__Object_fwd);
OpaqueType* OpaqueTy_struct_rubinius__MethodTable = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::MethodTable", OpaqueTy_struct_rubinius__MethodTable);

PointerType* PointerTy_3 = PointerType::get(OpaqueTy_struct_rubinius__MethodTable, 0);

StructTy_struct_rubinius__Module_fields.push_back(PointerTy_3);
StructTy_struct_rubinius__Module_fields.push_back(PointerTy_0);
OpaqueType* OpaqueTy_struct_rubinius__LookupTable = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::LookupTable", OpaqueTy_struct_rubinius__LookupTable);

PointerType* PointerTy_4 = PointerType::get(OpaqueTy_struct_rubinius__LookupTable, 0);

StructTy_struct_rubinius__Module_fields.push_back(PointerTy_4);
PATypeHolder StructTy_struct_rubinius__Module_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_5 = PointerType::get(StructTy_struct_rubinius__Module_fwd, 0);

StructTy_struct_rubinius__Module_fields.push_back(PointerTy_5);
std::vector<const Type*>StructTy_struct_rubinius__Array_fields;
StructTy_struct_rubinius__Array_fields.push_back(StructTy_struct_rubinius__Object_fwd);
OpaqueType* OpaqueTy_struct_rubinius__Fixnum = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::Fixnum", OpaqueTy_struct_rubinius__Fixnum);

PointerType* PointerTy_7 = PointerType::get(OpaqueTy_struct_rubinius__Fixnum, 0);

StructTy_struct_rubinius__Array_fields.push_back(PointerTy_7);
std::vector<const Type*>StructTy_struct_rubinius__Tuple_fields;
StructTy_struct_rubinius__Tuple_fields.push_back(StructTy_struct_rubinius__Object_fwd);
StructTy_struct_rubinius__Tuple_fields.push_back(IntegerType::get(mod->getContext(), 32));
PATypeHolder PointerTy_1_fwd = OpaqueType::get(mod->getContext());
ArrayType* ArrayTy_9 = ArrayType::get(PointerTy_1_fwd, 0);

StructTy_struct_rubinius__Tuple_fields.push_back(ArrayTy_9);
StructType* StructTy_struct_rubinius__Tuple = StructType::get(mod->getContext(), StructTy_struct_rubinius__Tuple_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Tuple", StructTy_struct_rubinius__Tuple);

PointerType* PointerTy_8 = PointerType::get(StructTy_struct_rubinius__Tuple, 0);

StructTy_struct_rubinius__Array_fields.push_back(PointerTy_8);
StructTy_struct_rubinius__Array_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__Array_fields.push_back(PointerTy_1_fwd);
StructType* StructTy_struct_rubinius__Array = StructType::get(mod->getContext(), StructTy_struct_rubinius__Array_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Array", StructTy_struct_rubinius__Array);

PointerType* PointerTy_6 = PointerType::get(StructTy_struct_rubinius__Array, 0);

StructTy_struct_rubinius__Module_fields.push_back(PointerTy_6);
StructType* StructTy_struct_rubinius__Module = StructType::get(mod->getContext(), StructTy_struct_rubinius__Module_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Module", StructTy_struct_rubinius__Module);
cast<OpaqueType>(StructTy_struct_rubinius__Module_fwd.get())->refineAbstractTypeTo(StructTy_struct_rubinius__Module);
StructTy_struct_rubinius__Module = cast<StructType>(StructTy_struct_rubinius__Module_fwd.get());


StructTy_struct_rubinius__Class_fields.push_back(StructTy_struct_rubinius__Module);
StructTy_struct_rubinius__Class_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__Class_fields.push_back(PointerTy_4);
OpaqueType* OpaqueTy_struct_rubinius__TypeInfo = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::TypeInfo", OpaqueTy_struct_rubinius__TypeInfo);

PointerType* PointerTy_10 = PointerType::get(OpaqueTy_struct_rubinius__TypeInfo, 0);

StructTy_struct_rubinius__Class_fields.push_back(PointerTy_10);
StructTy_struct_rubinius__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__Class_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__Class_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_struct_rubinius__Class = StructType::get(mod->getContext(), StructTy_struct_rubinius__Class_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Class", StructTy_struct_rubinius__Class);

PointerType* PointerTy_2 = PointerType::get(StructTy_struct_rubinius__Class, 0);

StructTy_struct_rubinius__ObjectHeader_fields.push_back(PointerTy_2);
StructTy_struct_rubinius__ObjectHeader_fields.push_back(PointerTy_1_fwd);
PointerType* PointerTy_12 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);

ArrayType* ArrayTy_11 = ArrayType::get(PointerTy_12, 0);

StructTy_struct_rubinius__ObjectHeader_fields.push_back(ArrayTy_11);
StructType* StructTy_struct_rubinius__ObjectHeader = StructType::get(mod->getContext(), StructTy_struct_rubinius__ObjectHeader_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::ObjectHeader", StructTy_struct_rubinius__ObjectHeader);

StructTy_struct_rubinius__Object_fields.push_back(StructTy_struct_rubinius__ObjectHeader);
StructType* StructTy_struct_rubinius__Object = StructType::get(mod->getContext(), StructTy_struct_rubinius__Object_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Object", StructTy_struct_rubinius__Object);
cast<OpaqueType>(StructTy_struct_rubinius__Object_fwd.get())->refineAbstractTypeTo(StructTy_struct_rubinius__Object);
StructTy_struct_rubinius__Object = cast<StructType>(StructTy_struct_rubinius__Object_fwd.get());


PointerType* PointerTy_1 = PointerType::get(StructTy_struct_rubinius__Object, 0);
cast<OpaqueType>(PointerTy_1_fwd.get())->refineAbstractTypeTo(PointerTy_1);
PointerTy_1 = cast<PointerType>(PointerTy_1_fwd.get());


StructTy_struct_rubinius__Arguments_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__Arguments_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__Arguments_fields.push_back(IntegerType::get(mod->getContext(), 32));
PointerType* PointerTy_13 = PointerType::get(PointerTy_1, 0);

StructTy_struct_rubinius__Arguments_fields.push_back(PointerTy_13);
StructTy_struct_rubinius__Arguments_fields.push_back(PointerTy_8);
StructType* StructTy_struct_rubinius__Arguments = StructType::get(mod->getContext(), StructTy_struct_rubinius__Arguments_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Arguments", StructTy_struct_rubinius__Arguments);

mod->addTypeName("struct.rubinius::Array", StructTy_struct_rubinius__Array);
std::vector<const Type*>StructTy_struct_rubinius__BlockEnvironment_fields;
StructTy_struct_rubinius__BlockEnvironment_fields.push_back(StructTy_struct_rubinius__Object);
std::vector<const Type*>StructTy_struct_rubinius__VariableScope_fields;
StructTy_struct_rubinius__VariableScope_fields.push_back(StructTy_struct_rubinius__Object);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_1);
std::vector<const Type*>StructTy_struct_rubinius__CompiledMethod_fields;
std::vector<const Type*>StructTy_struct_rubinius__Executable_fields;
StructTy_struct_rubinius__Executable_fields.push_back(StructTy_struct_rubinius__Object);
StructTy_struct_rubinius__Executable_fields.push_back(PointerTy_0);
StructTy_struct_rubinius__Executable_fields.push_back(PointerTy_7);
std::vector<const Type*>FuncTy_17_args;
OpaqueType* OpaqueTy_struct_rubinius__VM = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::VM", OpaqueTy_struct_rubinius__VM);

PointerType* PointerTy_18 = PointerType::get(OpaqueTy_struct_rubinius__VM, 0);

FuncTy_17_args.push_back(PointerTy_18);
std::vector<const Type*>StructTy_struct_rubinius__CallFrame_fields;
PATypeHolder PointerTy_19_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_19_fwd);
OpaqueType* OpaqueTy_struct_rubinius__StaticScope = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::StaticScope", OpaqueTy_struct_rubinius__StaticScope);

PointerType* PointerTy_20 = PointerType::get(OpaqueTy_struct_rubinius__StaticScope, 0);

StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_20);
StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_12);
PATypeHolder PointerTy_15_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_15_fwd);
StructTy_struct_rubinius__CallFrame_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__CallFrame_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_12);
PATypeHolder PointerTy_14_fwd = OpaqueType::get(mod->getContext());
StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_14_fwd);
std::vector<const Type*>StructTy_struct_rubinius__StackVariables_fields;
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_14_fwd);
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_14_fwd);
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_5);
StructTy_struct_rubinius__StackVariables_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__StackVariables_fields.push_back(ArrayTy_9);
StructType* StructTy_struct_rubinius__StackVariables = StructType::get(mod->getContext(), StructTy_struct_rubinius__StackVariables_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::StackVariables", StructTy_struct_rubinius__StackVariables);

PointerType* PointerTy_21 = PointerType::get(StructTy_struct_rubinius__StackVariables, 0);

StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_21);
PointerType* PointerTy_22 = PointerType::get(StructTy_struct_rubinius__Arguments, 0);

StructTy_struct_rubinius__CallFrame_fields.push_back(PointerTy_22);
StructTy_struct_rubinius__CallFrame_fields.push_back(ArrayTy_9);
StructType* StructTy_struct_rubinius__CallFrame = StructType::get(mod->getContext(), StructTy_struct_rubinius__CallFrame_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::CallFrame", StructTy_struct_rubinius__CallFrame);

PointerType* PointerTy_19 = PointerType::get(StructTy_struct_rubinius__CallFrame, 0);
cast<OpaqueType>(PointerTy_19_fwd.get())->refineAbstractTypeTo(PointerTy_19);
PointerTy_19 = cast<PointerType>(PointerTy_19_fwd.get());


FuncTy_17_args.push_back(PointerTy_19);
PATypeHolder StructTy_struct_rubinius__Executable_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_23 = PointerType::get(StructTy_struct_rubinius__Executable_fwd, 0);

FuncTy_17_args.push_back(PointerTy_23);
FuncTy_17_args.push_back(PointerTy_5);
FuncTy_17_args.push_back(PointerTy_22);
FunctionType* FuncTy_17 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_17_args,
 /*isVarArg=*/false);

PointerType* PointerTy_16 = PointerType::get(FuncTy_17, 0);

StructTy_struct_rubinius__Executable_fields.push_back(PointerTy_16);
StructTy_struct_rubinius__Executable_fields.push_back(IntegerType::get(mod->getContext(), 32));
OpaqueType* OpaqueTy_struct_rubinius__Inliners = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::Inliners", OpaqueTy_struct_rubinius__Inliners);

PointerType* PointerTy_24 = PointerType::get(OpaqueTy_struct_rubinius__Inliners, 0);

StructTy_struct_rubinius__Executable_fields.push_back(PointerTy_24);
StructType* StructTy_struct_rubinius__Executable = StructType::get(mod->getContext(), StructTy_struct_rubinius__Executable_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Executable", StructTy_struct_rubinius__Executable);
cast<OpaqueType>(StructTy_struct_rubinius__Executable_fwd.get())->refineAbstractTypeTo(StructTy_struct_rubinius__Executable);
StructTy_struct_rubinius__Executable = cast<StructType>(StructTy_struct_rubinius__Executable_fwd.get());


StructTy_struct_rubinius__CompiledMethod_fields.push_back(StructTy_struct_rubinius__Executable);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_0);
OpaqueType* OpaqueTy_struct_rubinius__InstructionSequence = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::InstructionSequence", OpaqueTy_struct_rubinius__InstructionSequence);

PointerType* PointerTy_25 = PointerType::get(OpaqueTy_struct_rubinius__InstructionSequence, 0);

StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_25);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_7);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_8);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_8);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_0);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_20);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_4);
OpaqueType* OpaqueTy_struct_rubinius__VMMethod = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::VMMethod", OpaqueTy_struct_rubinius__VMMethod);

PointerType* PointerTy_26 = PointerType::get(OpaqueTy_struct_rubinius__VMMethod, 0);

StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_26);
OpaqueType* OpaqueTy_struct_rubinius__jit__RuntimeDataHolder = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::jit::RuntimeDataHolder", OpaqueTy_struct_rubinius__jit__RuntimeDataHolder);

PointerType* PointerTy_27 = PointerType::get(OpaqueTy_struct_rubinius__jit__RuntimeDataHolder, 0);

StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_27);
StructTy_struct_rubinius__CompiledMethod_fields.push_back(PointerTy_8);
StructType* StructTy_struct_rubinius__CompiledMethod = StructType::get(mod->getContext(), StructTy_struct_rubinius__CompiledMethod_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::CompiledMethod", StructTy_struct_rubinius__CompiledMethod);

PointerType* PointerTy_15 = PointerType::get(StructTy_struct_rubinius__CompiledMethod, 0);
cast<OpaqueType>(PointerTy_15_fwd.get())->refineAbstractTypeTo(PointerTy_15);
PointerTy_15 = cast<PointerType>(PointerTy_15_fwd.get());


StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_15);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_5);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_14_fwd);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_8);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__VariableScope_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__VariableScope_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructTy_struct_rubinius__VariableScope_fields.push_back(PointerTy_13);
StructTy_struct_rubinius__VariableScope_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_rubinius__VariableScope = StructType::get(mod->getContext(), StructTy_struct_rubinius__VariableScope_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::VariableScope", StructTy_struct_rubinius__VariableScope);

PointerType* PointerTy_14 = PointerType::get(StructTy_struct_rubinius__VariableScope, 0);
cast<OpaqueType>(PointerTy_14_fwd.get())->refineAbstractTypeTo(PointerTy_14);
PointerTy_14 = cast<PointerType>(PointerTy_14_fwd.get());


StructTy_struct_rubinius__BlockEnvironment_fields.push_back(PointerTy_14);
StructTy_struct_rubinius__BlockEnvironment_fields.push_back(PointerTy_14);
StructTy_struct_rubinius__BlockEnvironment_fields.push_back(PointerTy_15);
StructTy_struct_rubinius__BlockEnvironment_fields.push_back(PointerTy_5);
StructType* StructTy_struct_rubinius__BlockEnvironment = StructType::get(mod->getContext(), StructTy_struct_rubinius__BlockEnvironment_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::BlockEnvironment", StructTy_struct_rubinius__BlockEnvironment);

std::vector<const Type*>StructTy_struct_rubinius__BlockInvocation_fields;
StructTy_struct_rubinius__BlockInvocation_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__BlockInvocation_fields.push_back(PointerTy_1);
StructTy_struct_rubinius__BlockInvocation_fields.push_back(PointerTy_20);
StructTy_struct_rubinius__BlockInvocation_fields.push_back(PointerTy_5);
StructType* StructTy_struct_rubinius__BlockInvocation = StructType::get(mod->getContext(), StructTy_struct_rubinius__BlockInvocation_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::BlockInvocation", StructTy_struct_rubinius__BlockInvocation);

mod->addTypeName("struct.rubinius::CallFrame", StructTy_struct_rubinius__CallFrame);
OpaqueType* OpaqueTy_struct_rubinius__CallUnit = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::CallUnit", OpaqueTy_struct_rubinius__CallUnit);

mod->addTypeName("struct.rubinius::Class", StructTy_struct_rubinius__Class);
mod->addTypeName("struct.rubinius::CompiledMethod", StructTy_struct_rubinius__CompiledMethod);
std::vector<const Type*>StructTy_struct_rubinius__Dispatch_fields;
StructTy_struct_rubinius__Dispatch_fields.push_back(PointerTy_0);
StructTy_struct_rubinius__Dispatch_fields.push_back(PointerTy_5);
StructTy_struct_rubinius__Dispatch_fields.push_back(PointerTy_23);
StructTy_struct_rubinius__Dispatch_fields.push_back(IntegerType::get(mod->getContext(), 8));
StructType* StructTy_struct_rubinius__Dispatch = StructType::get(mod->getContext(), StructTy_struct_rubinius__Dispatch_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Dispatch", StructTy_struct_rubinius__Dispatch);

mod->addTypeName("struct.rubinius::Executable", StructTy_struct_rubinius__Executable);
mod->addTypeName("struct.rubinius::Fixnum", OpaqueTy_struct_rubinius__Fixnum);
std::vector<const Type*>StructTy_struct_rubinius__Float_fields;
std::vector<const Type*>StructTy_struct_rubinius__Numeric_fields;
StructTy_struct_rubinius__Numeric_fields.push_back(StructTy_struct_rubinius__Object);
StructType* StructTy_struct_rubinius__Numeric = StructType::get(mod->getContext(), StructTy_struct_rubinius__Numeric_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Numeric", StructTy_struct_rubinius__Numeric);

StructTy_struct_rubinius__Float_fields.push_back(StructTy_struct_rubinius__Numeric);
StructTy_struct_rubinius__Float_fields.push_back(Type::getDoubleTy(mod->getContext()));
StructType* StructTy_struct_rubinius__Float = StructType::get(mod->getContext(), StructTy_struct_rubinius__Float_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::Float", StructTy_struct_rubinius__Float);

std::vector<const Type*>StructTy_struct_rubinius__InlineCache_fields;
StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_0);
OpaqueType* OpaqueTy_struct_rubinius__MethodCacheEntry = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::MethodCacheEntry", OpaqueTy_struct_rubinius__MethodCacheEntry);

PointerType* PointerTy_28 = PointerType::get(OpaqueTy_struct_rubinius__MethodCacheEntry, 0);

StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_28);
PointerType* PointerTy_29 = PointerType::get(OpaqueTy_struct_rubinius__CallUnit, 0);

StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_29);
std::vector<const Type*>FuncTy_31_args;
FuncTy_31_args.push_back(PointerTy_18);
PATypeHolder StructTy_struct_rubinius__InlineCache_fwd = OpaqueType::get(mod->getContext());
PointerType* PointerTy_32 = PointerType::get(StructTy_struct_rubinius__InlineCache_fwd, 0);

FuncTy_31_args.push_back(PointerTy_32);
FuncTy_31_args.push_back(PointerTy_19);
FuncTy_31_args.push_back(PointerTy_22);
FunctionType* FuncTy_31 = FunctionType::get(
 /*Result=*/PointerTy_1,
 /*Params=*/FuncTy_31_args,
 /*isVarArg=*/false);

PointerType* PointerTy_30 = PointerType::get(FuncTy_31, 0);

StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_30);
StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_30);
PointerType* PointerTy_33 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);

StructTy_struct_rubinius__InlineCache_fields.push_back(PointerTy_33);
StructTy_struct_rubinius__InlineCache_fields.push_back(IntegerType::get(mod->getContext(), 32));
std::vector<const Type*>StructTy_struct_rubinius__InlineCacheHit_fields;
StructTy_struct_rubinius__InlineCacheHit_fields.push_back(PointerTy_2);
StructTy_struct_rubinius__InlineCacheHit_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_rubinius__InlineCacheHit = StructType::get(mod->getContext(), StructTy_struct_rubinius__InlineCacheHit_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::InlineCacheHit", StructTy_struct_rubinius__InlineCacheHit);

ArrayType* ArrayTy_34 = ArrayType::get(StructTy_struct_rubinius__InlineCacheHit, 3);

StructTy_struct_rubinius__InlineCache_fields.push_back(ArrayTy_34);
StructTy_struct_rubinius__InlineCache_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_rubinius__InlineCache = StructType::get(mod->getContext(), StructTy_struct_rubinius__InlineCache_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::InlineCache", StructTy_struct_rubinius__InlineCache);
cast<OpaqueType>(StructTy_struct_rubinius__InlineCache_fwd.get())->refineAbstractTypeTo(StructTy_struct_rubinius__InlineCache);
StructTy_struct_rubinius__InlineCache = cast<StructType>(StructTy_struct_rubinius__InlineCache_fwd.get());


mod->addTypeName("struct.rubinius::InlineCacheHit", StructTy_struct_rubinius__InlineCacheHit);
mod->addTypeName("struct.rubinius::Inliners", OpaqueTy_struct_rubinius__Inliners);
mod->addTypeName("struct.rubinius::InstructionSequence", OpaqueTy_struct_rubinius__InstructionSequence);
mod->addTypeName("struct.rubinius::LookupTable", OpaqueTy_struct_rubinius__LookupTable);
mod->addTypeName("struct.rubinius::MethodCacheEntry", OpaqueTy_struct_rubinius__MethodCacheEntry);
mod->addTypeName("struct.rubinius::MethodTable", OpaqueTy_struct_rubinius__MethodTable);
mod->addTypeName("struct.rubinius::Module", StructTy_struct_rubinius__Module);
mod->addTypeName("struct.rubinius::Numeric", StructTy_struct_rubinius__Numeric);
mod->addTypeName("struct.rubinius::Object", StructTy_struct_rubinius__Object);
std::vector<const Type*>StructTy_struct_rubinius__ObjectFlags_fields;
StructTy_struct_rubinius__ObjectFlags_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__ObjectFlags_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_rubinius__ObjectFlags = StructType::get(mod->getContext(), StructTy_struct_rubinius__ObjectFlags_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::ObjectFlags", StructTy_struct_rubinius__ObjectFlags);

mod->addTypeName("struct.rubinius::ObjectHeader", StructTy_struct_rubinius__ObjectHeader);
OpaqueType* OpaqueTy_struct_rubinius__Selector = OpaqueType::get(mod->getContext());
mod->addTypeName("struct.rubinius::Selector", OpaqueTy_struct_rubinius__Selector);

mod->addTypeName("struct.rubinius::StackVariables", StructTy_struct_rubinius__StackVariables);
mod->addTypeName("struct.rubinius::StaticScope", OpaqueTy_struct_rubinius__StaticScope);
mod->addTypeName("struct.rubinius::Symbol", OpaqueTy_struct_rubinius__Symbol);
mod->addTypeName("struct.rubinius::Tuple", StructTy_struct_rubinius__Tuple);
mod->addTypeName("struct.rubinius::TypeInfo", OpaqueTy_struct_rubinius__TypeInfo);
std::vector<const Type*>StructTy_struct_rubinius__UnwindInfo_fields;
StructTy_struct_rubinius__UnwindInfo_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__UnwindInfo_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructTy_struct_rubinius__UnwindInfo_fields.push_back(IntegerType::get(mod->getContext(), 32));
StructType* StructTy_struct_rubinius__UnwindInfo = StructType::get(mod->getContext(), StructTy_struct_rubinius__UnwindInfo_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::UnwindInfo", StructTy_struct_rubinius__UnwindInfo);

mod->addTypeName("struct.rubinius::VM", OpaqueTy_struct_rubinius__VM);
mod->addTypeName("struct.rubinius::VMMethod", OpaqueTy_struct_rubinius__VMMethod);
mod->addTypeName("struct.rubinius::VariableScope", StructTy_struct_rubinius__VariableScope);
std::vector<const Type*>StructTy_struct_rubinius__jit__RuntimeData_fields;
StructTy_struct_rubinius__jit__RuntimeData_fields.push_back(PointerTy_15);
StructTy_struct_rubinius__jit__RuntimeData_fields.push_back(PointerTy_0);
StructTy_struct_rubinius__jit__RuntimeData_fields.push_back(PointerTy_5);
StructType* StructTy_struct_rubinius__jit__RuntimeData = StructType::get(mod->getContext(), StructTy_struct_rubinius__jit__RuntimeData_fields, /*isPacked=*/false);
mod->addTypeName("struct.rubinius::jit::RuntimeData", StructTy_struct_rubinius__jit__RuntimeData);

mod->addTypeName("struct.rubinius::jit::RuntimeDataHolder", OpaqueTy_struct_rubinius__jit__RuntimeDataHolder);
mod->addTypeName("union.rubinius::HeaderWord", StructTy_union_rubinius__HeaderWord);

// Function Declarations

// Global Variable Declarations


// Constant Definitions

// Global Variable Definitions

// Function Definitions

return mod;

}

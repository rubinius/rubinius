1. What is Rubinius

Rubinius is an implementation of the Ruby programming language.

Rubinius includes a bytecode virtual machine, parser, bytecode compiler,
garbage collector, and just-in-time (JIT) native machine code compiler. The
Ruby core library is written almost entirely in Ruby. Rubinius provides the
same standard libraries as Matz's Ruby implementation (MRI). Rubinius also
provides C-API compatibility for native C extensions.

Rubinius currently is compatible with Ruby version 1.8.7. Full support for Ruby
version 1.9.3 is coming soon.

Rubinius runs on Mac OS X and many Unix/Linux operating systems. Support for
Microsoft Windows is coming soon.

Most popular Ruby applications, like Rails, run on Rubinius.


2. License

Rubinius uses the BSD license. See LICENSE for details.


3. Installing Rubinius from Source

To install Rubinius, use the following steps:

  1. Ensure that MRI 1.8.7+, rubygems, rake, and git are installed
  2. git clone git://github.com/rubinius/rubinius.git
  3. cd rubinius
  4. ./configure --prefix=/path/to/install/dir
  5. rake install

When the install process finishes, follow the directions printed to the
terminal to add the Rubinius executable (bin) directory to your PATH.

Language Modes

Rubinius 2.0 (the master branch) implements both 1.8 and 1.9 language features
in one executable. You can select the language mode at runtime by passing the
-X18 or -X19 flag, either as a command line option or by setting the RBXOPT
environment variable. Both commands below should have the same effect:

RBXOPT=-X19 bin/rbx -v bin/rbx -X19 -v If I run that on my system, I will see
the following:

rubinius 2.0.0dev (1.9.2 0f223599 yyyy-mm-dd JI) [x86_64-apple-darwin10.8.0]
The default language mode is 1.8, so if you invoke rbx with no other options,
youâ€™ll be running in 1.8 mode. You can change the default mode with a configure
time option as follows:

./configure --default-version=1.9 If you configure Rubinius to have a default
language mode of 1.9, you can access 1.8 mode with the -X18 runtime option as
discussed above.

For more information about building and running Rubinius, run 'rake docs'.


4. Installing Rubinius with RVM

Rubinius can be installed using the Ruby Version Manager (RVM) project.

To install Rubinius with RVM, use the following steps:

  1. Ensure the latest RVM is installed
  2. rvm install rbx-head

To use Rubinius in the current shell session, run:

  rvm use rbx

To make Rubinius the default interpreter in new shells, run:

  rvm use rbx --default

The documentation for RVM is available at:

  https://rvm.io

5. Using RubyGems

Rubinius comes with RubyGems built-in. To install a gem, run the following:

  rbx -S gem install <gem_name>


6. Documentation

After installing Rubinius, run 'rbx docs' to access the built-in documentation
at any time.


7. Tickets

Please file tickets for bugs or problems. The issue tracker is:

  http://github.com/rubinius/rubinius/issues


8. Contributing

The Rubinius team welcomes contributions. For more information read the
CONTRIBUTING file in the root directory of Rubinius.
